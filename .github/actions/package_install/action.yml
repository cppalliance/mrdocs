name: 'Install dependencies'
description: 'This workflow installs dependencies from multiple package managers'
inputs:
  vcpkg:
    description: 'List of packages we should install with vcpkg.'
    required: false
    default: ''
  apt-get:
    description: 'List of packages we should install with apt-get.'
    required: false
    default: ''
  vcpkg_triplet:
    description: 'The triplet used by vcpkg to install packages.'
    required: false
    default: ''
  vcpkg_dir:
    description: 'The directory where vcpkg should be cloned and installed.'
    required: false
    default: 'vcpkg'
  vcpkg_branch:
    description: 'vcpkg branch we should use'
    required: false
    default: 'master'
outputs:
  vcpkg_toolchain:
    description: "vcpkg toolchain file"
    value: ${{ steps.ctx.outputs.vcpkg_toolchain }}

runs:
  using: "composite"
  steps:
    - name: Environment
      id: ctx
      shell: bash
      run: |
        set -xe
        
        # vcpkg hash
        vcpkg_hash="$(git ls-remote https://github.com/microsoft/vcpkg.git ${{ inputs.vcpkg_branch }} | awk '{ print $1 }')"
        echo "vcpkg_hash=$vcpkg_hash" >> $GITHUB_OUTPUT
        
        # vcpkg triplet
        default_triplet="${{ (runner.os == 'Windows' && 'x64-windows') || (runner.os == 'Linux' && 'x64-linux') || (runner.os == 'macOS' && 'x64-osx') || '' }}"
        input_triplet=${{ inputs.vcpkg_triplet }}
        if [ "$input_triplet" == "" ]; then
            triplet=$default_triplet
        else
            triplet=$input_triplet 
        fi
        echo "triplet=$triplet" >> $GITHUB_OUTPUT
        if [ "$triplet" == "" ]; then
            triplet_suffix=""
        else
            triplet_suffix=":$triplet" 
        fi
        echo "triplet_suffix=$triplet_suffix" >> $GITHUB_OUTPUT
        
        # vcpkg executable
        vcpkg_target_dir=${{ inputs.vcpkg_dir }}
        if [[ $vcpkg_target_dir == /* ]]; then
            vcpkg_exec_dir=$vcpkg_target_dir
        else
            vcpkg_exec_dir=./$vcpkg_target_dir
        fi
        vcpkg_bs_exe="${{ (runner.os == 'Windows' && '$vcpkg_exec_dir/bootstrap-vcpkg.bat') || '$vcpkg_exec_dir/bootstrap-vcpkg.sh' }}"
        echo "vcpkg_bs_exe=$vcpkg_bs_exe" >> $GITHUB_OUTPUT
        
        # vcpkg toolchain
        vcpkg_toolchain=$vcpkg_exec_dir/scripts/buildsystems/vcpkg.cmake
        echo "vcpkg_toolchain=$vcpkg_toolchain" >> $GITHUB_OUTPUT
        
        # vcpkg cache hash
        vcpkg_cache_hash="${{ runner.os }}-$vcpkg_hash$triplet_suffix"
        vcpkg_packages=${{ inputs.vcpkg }}
        for package in ${vcpkg_packages//,/ }
        do
            vcpkg_cache_hash=$vcpkg_cache_hash-$package
        done
        echo "vcpkg_cache_hash=$vcpkg_cache_hash" >> $GITHUB_OUTPUT

    # Install packages on ubuntu
    # https://docs.github.com/en/actions/learn-github-actions/contexts#runner-context
    - name: apt-get packages
      shell: bash
      if: ${{ runner.os == 'Linux' && inputs.apt-get }}
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ inputs.apt-get }}

    # Attempt to get vcpkg with its packages from the cache before cloning it
    # The cache key includes the vcpkg version, os, packages and triplet
    - name: vcpkg cache
      if: ${{ inputs.vcpkg }}
      id: cache-vcpkg
      uses: actions/cache@v3
      with:
        path: ${{ inputs.vcpkg_dir }}
        key: ${{ steps.ctx.outputs.vcpkg_cache_hash }}

    - name: vcpkg install
      if: steps.cache-vcpkg.outputs.cache-hit != 'true' && inputs.vcpkg != ''
      shell: bash
      run: |
        set -xe
        git clone https://github.com/microsoft/vcpkg.git -b ${{ inputs.vcpkg_branch }} ${{ inputs.vcpkg_dir }}
        ${{ steps.ctx.outputs.vcpkg_bs_exe }}
        cd ${{ inputs.vcpkg_dir }}
        packages=${{ inputs.vcpkg }}
        for package in ${packages//,/ }
        do
          vcpkg install $package${{ steps.ctx.outputs.triplet_suffix }}
        done
