//
// Licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// Copyright (c) 2024 Alan de Freitas (alandefreitas@gmail.com)
//
// Official repository: https://github.com/cppalliance/mrdocs
//

/* This file describes the types of Info nodes supported by MrDocs.
 *
 * It uses the same file format as LLVM .inc files generated by TableGen
 * with the exception that we maintain this file directly.
 *
 * The purpose of this file is to provide a list of Info nodes that can be
 * used by MrDocs in such a way that any code that depends on an exaustive
 * list of Info nodes can be generated automatically.
 *
 * The table contains the basic information for each node type, such
 * as the name in various casings and the description.
 *
 * How to use this table:
 *
 * 1) choose one of the following macros below, such as
 * INFO_PASCAL, INFO_PLURAL, INFO_UC, INFO_PASCAL_AND_UC, etc.
 * 2) Define this macro with the content to be rendered for each node type,
 * such as #define INFO_PASCAL(Type) struct Type##Info;
 * 3) Include this file below the macro definition with
 * #include <mrdocs/Metadata/InfoNodes.inc>
 *
 * This will render your macro for each node type.
 * We do not recommend using the INFO macro directly in your code because
 * it might change in the future as more information about the nodes is
 * added.
 * This can make the code hard to maintain.
 *
 */


// See files changed in https://github.com/cppalliance/mrdocs/pull/545

#ifndef INFO
#ifdef INFO_PASCAL
#define INFO(Pascal, Plural, UC, LC, LC_Plural, Desc) INFO_PASCAL(Pascal)
#endif
#ifdef INFO_PLURAL
#define INFO(Pascal, Plural, UC, LC, LC_Plural, Desc) INFO_PLURAL(Plural)
#endif
#ifdef INFO_UC
#define INFO(Pascal, Plural, UC, LC, LC_Plural, Desc) INFO_UC(UC)
#endif
#ifdef INFO_PASCAL_AND_UC
#define INFO(Pascal, Plural, UC, LC, LC_Plural, Desc) INFO_PASCAL_AND_UC(Pascal, UC)
#endif
#ifdef INFO_PASCAL_AND_LC
#define INFO(Pascal, Plural, UC, LC, LC_Plural, Desc) INFO_PASCAL_AND_LC(Pascal, LC)
#endif
#ifdef INFO_PLURAL_AND_LC_PLURAL
#define INFO(Pascal, Plural, UC, LC, LC_Plural, Desc) INFO_PLURAL_AND_LC_PLURAL(Plural, LC_Plural)
#endif
#ifdef INFO_PASCAL_AND_DESC
#define INFO(Pascal, Plural, UC, LC, LC_Plural, Desc) INFO_PASCAL_AND_DESC(Pascal, Desc)
#endif
#endif

INFO(Namespace,      Namespaces,      NAMESPACE,      namespace,      namespaces,      The symbol is a namespace)
INFO(Record,         Records,         RECORD,         record,         records,         The symbol is a record (class or struct))
INFO(Function,       Functions,       FUNCTION,       function,       functions,       The symbol is a function)
INFO(Enum,           Enums,           ENUM,           enum,           enums,           The symbol is an enum)
INFO(Typedef,        Typedefs,        TYPEDEF,        typedef,        typedefs,        The symbol is a typedef)
INFO(Variable,       Variables,       VARIABLE,       variable,       variables,       The symbol is a variable)
INFO(Field,          Fields,          FIELD,          field,          fields,          The symbol is a field)
INFO(Specialization, Specializations, SPECIALIZATION, specialization, specializations, The symbol is a template specialization)
INFO(Friend,         Friends,         FRIEND,         friend,         friends,         The symbol is a friend declaration)
INFO(Enumerator,     Enumerators,     ENUMERATOR,     enumerator,     enumerators,     The symbol is an enumerator)
INFO(Guide,          Guides,          GUIDE,          guide,          guides,          The symbol is a deduction guide)
INFO(Alias,          Aliases,         ALIAS,          alias,          aliases,         The symbol is a namespace alias)
INFO(Using,          Usings,          USING,          using,          usings,          The symbol is a using declaration)

#ifdef INFO_PASCAL
#undef INFO_PASCAL
#endif

#ifdef INFO_PLURAL
#undef INFO_PLURAL
#endif

#ifdef INFO_UC
#undef INFO_UC
#endif

#ifdef INFO_PASCAL_AND_UC
#undef INFO_PASCAL_AND_UC
#endif

#ifdef INFO_PASCAL_AND_LC
#undef INFO_PASCAL_AND_LC
#endif

#ifdef INFO_PLURAL_AND_LC_PLURAL
#undef INFO_PLURAL_AND_LC_PLURAL
#endif

#ifdef INFO_PASCAL_AND_DESC
#undef INFO_PASCAL_AND_DESC
#endif

#undef INFO
