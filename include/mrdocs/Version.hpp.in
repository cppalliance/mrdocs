//
// Licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
// Copyright (c) 2023 Klemens D. Morgenstern
//
// Official repository: https://github.com/cppalliance/mrdocs
//

#ifndef MRDOCS_VERSION_HPP
#define MRDOCS_VERSION_HPP

#include <string_view>
#include <cstddef>


namespace mrdocs {

/** Project version string in MAJOR.MINOR.PATCH format.
*/
inline constexpr std::string_view project_version             = "@PROJECT_VERSION@";

/** Project version string with build metadata.

    Includes the git short SHA when not on a tagged commit,
    and optional ".dirty" if the working tree was modified.
*/
inline constexpr std::string_view project_version_with_build  = "@PROJECT_VERSION_WITH_BUILD@";

/** Major version number.
*/
inline constexpr std::size_t      project_version_major       = @PROJECT_VERSION_MAJOR@;

/** Minor version number.
*/
inline constexpr std::size_t      project_version_minor       = @PROJECT_VERSION_MINOR@;

/** Patch version number.
*/
inline constexpr std::size_t      project_version_patch       = @PROJECT_VERSION_PATCH@;

/** Full 40-character git commit SHA for this build.

    Empty if the git information was unavailable.
*/
inline constexpr std::string_view project_version_build       = "@PROJECT_VERSION_BUILD@";

/** Canonical project name.
*/
inline constexpr std::string_view project_name                = "@PROJECT_NAME@";

/** Short description of the project.
*/
inline constexpr std::string_view project_description         = "@PROJECT_DESCRIPTION@";

} // mrdocs


#endif
