<?xml version="1.0" encoding="UTF-8"?>
<mrdocs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://github.com/cppalliance/mrdocs/raw/develop/mrdocs.rnc">
<namespace id="//////////////////////////8=">
  <struct name="A" id="YrPSaKAbmXgzCAX5WByx4eVoqBM=">
    <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="12" class="def"/>
    <doc>
      <brief>
        <text>This struct will be inherited as public</text>
      </brief>
    </doc>
    <function name="f" id="nGMtjL9NQBvDG5i6/RUEWr+GrRg=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="20"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;0&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Public member function f taking a Tag&lt;0&gt;.</text>
        </brief>
        <para>
          <text>That is the only member function that will be publicly accessible in U via inheritance.</text>
        </para>
      </doc>
    </function>
  </struct>
  <struct name="B" id="3JsK1DO0O+wZhv+0meptQrbs3fY=">
    <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="24" class="def"/>
    <doc>
      <brief>
        <text>This struct will be inherited as public</text>
      </brief>
    </doc>
    <function name="f" access="protected" id="xY3rr0vMQ99dtCUUyDbfqsakgww=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="28"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;1&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Protected member function f taking a Tag&lt;1&gt;.</text>
        </brief>
      </doc>
    </function>
  </struct>
  <struct name="C" id="BrX2oZup9qgy4SfJloKCuUYZshA=">
    <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="32" class="def"/>
    <doc>
      <brief>
        <text>This struct will be inherited as protected</text>
      </brief>
    </doc>
    <function name="f" id="PvNGaaAeF9VeSz8kIOeaPmy37BQ=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="35"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;2&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Public member function f taking a Tag&lt;2&gt;.</text>
        </brief>
      </doc>
    </function>
  </struct>
  <struct name="D" id="CSFzdUEgi4+pu0K2D3isHXeaoFQ=">
    <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="39" class="def"/>
    <doc>
      <brief>
        <text>This struct will be inherited as protected</text>
      </brief>
    </doc>
    <function name="f" access="protected" id="mEbr7lEslKhZ3jpVBYzcTiHp/oA=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="43"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;3&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Protected member function f taking a Tag&lt;3&gt;.</text>
        </brief>
      </doc>
    </function>
  </struct>
  <struct name="E" id="KJWEqOD/QXinlGIqVHqmIlA5Z6E=">
    <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="47" class="def"/>
    <doc>
      <brief>
        <text>This struct will be inherited as private</text>
      </brief>
    </doc>
    <function name="f" id="CEIniuKR4So6PAYFUcT6B+Nx+H8=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="50"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;4&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Public member function f taking a Tag&lt;4&gt;.</text>
        </brief>
      </doc>
    </function>
  </struct>
  <struct name="F" id="47VHAvq/9ANwJboZT8J8RwBjMLU=">
    <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="54" class="def"/>
    <doc>
      <brief>
        <text>This struct will be inherited as private</text>
      </brief>
    </doc>
    <function name="f" access="protected" id="5FJgzIcro5VIoeXTsaIxTaVD91s=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="58"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;5&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Protected member function f taking a Tag&lt;5&gt;.</text>
        </brief>
      </doc>
    </function>
  </struct>
  <template>
    <tparam name="idx" class="constant" type="int"/>
    <struct name="Tag" id="VcdHojbpExgHkfZT+vfrZl1ADjM=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="8" class="def"/>
      <doc>
        <brief>
          <text>A tag template to create distinct f functions.</text>
        </brief>
      </doc>
    </struct>
  </template>
  <struct name="U" id="FLgkhM3m0U3Lo2o3XLPUizWPH00=">
    <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="67" class="def"/>
    <base>
      <type id="YrPSaKAbmXgzCAX5WByx4eVoqBM=" name="A"/>
    </base>
    <base>
      <type id="3JsK1DO0O+wZhv+0meptQrbs3fY=" name="B"/>
    </base>
    <base access="protected">
      <type id="BrX2oZup9qgy4SfJloKCuUYZshA=" name="C"/>
    </base>
    <base access="protected">
      <type id="CSFzdUEgi4+pu0K2D3isHXeaoFQ=" name="D"/>
    </base>
    <doc>
      <brief>
        <text>This struct inherits from A, B, C, D, E, and F in various ways,</text>
      </brief>
      <para>
        <text>The documentation of this struct should include the function f twice: once in the member functions</text>
      </para>
    </doc>
    <function name="f" id="nGMtjL9NQBvDG5i6/RUEWr+GrRg=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="20"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;0&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Public member function f taking a Tag&lt;0&gt;.</text>
        </brief>
        <para>
          <text>That is the only member function that will be publicly accessible in U via inheritance.</text>
        </para>
      </doc>
    </function>
    <using id="rmQLRfXW6vtP8GPIdyNNwtpI+fw=" class="using" qualifier="A::U">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="76"/>
      <doc>
        <brief>
          <text>Bring all the A::A constructors into U.</text>
        </brief>
      </doc>
    </using>
    <using id="G3OvpIVH5hy5WK887jqrPTyl37g=" class="using" qualifier="B::U">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="78"/>
      <doc>
        <brief>
          <text>Bring all the B::B constructors into U.</text>
        </brief>
      </doc>
    </using>
    <using id="HTq6bF0wwPrK9aYY2w2AP0w7n4M=" class="using" qualifier="C::U">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="80"/>
      <doc>
        <brief>
          <text>Bring all the C::C constructors into U.</text>
        </brief>
      </doc>
    </using>
    <using id="zZluhP9Ym1VXLys/h+I2mnz4A6E=" class="using" qualifier="D::U">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="82"/>
      <doc>
        <brief>
          <text>Bring all the D::D constructors into U.</text>
        </brief>
      </doc>
    </using>
    <using id="T+dE7rV3VUFcNGkSQ5sS+TE3ovE=" class="using" qualifier="E::U">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="84"/>
      <doc>
        <brief>
          <text>Bring all the E::E constructors into U.</text>
        </brief>
      </doc>
    </using>
    <using id="YoyYEMZ0BckFWg9oBMs6hEGFY1o=" class="using" qualifier="F::U">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="86"/>
      <doc>
        <brief>
          <text>Bring all the F::F constructors into U.</text>
        </brief>
      </doc>
    </using>
    <using id="DND4SGqk7GU/0r60b5NpJlihpCI=" class="using" qualifier="A::f">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="89"/>
      <doc>
        <brief>
          <text>Bring all the A::f functions into U.</text>
        </brief>
      </doc>
      <named id="nGMtjL9NQBvDG5i6/RUEWr+GrRg="/>
    </using>
    <using id="vu1xdQQ6LH5sjZHsW8XwytWstO8=" class="using" qualifier="B::f">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="91"/>
      <doc>
        <brief>
          <text>Bring all the B::f functions into U.</text>
        </brief>
      </doc>
      <named id="xY3rr0vMQ99dtCUUyDbfqsakgww="/>
    </using>
    <using id="91+ZMOvfXn2lxSqWzq2TgM9xueo=" class="using" qualifier="C::f">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="93"/>
      <doc>
        <brief>
          <text>Bring all the C::f functions into U.</text>
        </brief>
      </doc>
      <named id="PvNGaaAeF9VeSz8kIOeaPmy37BQ="/>
    </using>
    <using id="CQN3Y3phH+3gaj82D6tq5au3JMQ=" class="using" qualifier="D::f">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="95"/>
      <doc>
        <brief>
          <text>Bring all the D::f functions into U.</text>
        </brief>
      </doc>
      <named id="mEbr7lEslKhZ3jpVBYzcTiHp/oA="/>
    </using>
    <using id="vYTRrgx7/KOCWsM9RR5gIdgaRsw=" class="using" qualifier="E::f">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="97"/>
      <doc>
        <brief>
          <text>Bring all the E::f functions into U.</text>
        </brief>
      </doc>
      <named id="CEIniuKR4So6PAYFUcT6B+Nx+H8="/>
    </using>
    <using id="IrXefx1M56k6Iagrba7mfDBpg80=" class="using" qualifier="F::f">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="99"/>
      <doc>
        <brief>
          <text>Bring all the F::f functions into U.</text>
        </brief>
      </doc>
      <named id="5FJgzIcro5VIoeXTsaIxTaVD91s="/>
    </using>
    <function name="f" access="protected" id="xY3rr0vMQ99dtCUUyDbfqsakgww=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="28"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;1&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Protected member function f taking a Tag&lt;1&gt;.</text>
        </brief>
      </doc>
    </function>
    <function name="f" id="PvNGaaAeF9VeSz8kIOeaPmy37BQ=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="35"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;2&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Public member function f taking a Tag&lt;2&gt;.</text>
        </brief>
      </doc>
    </function>
    <function name="f" access="protected" id="mEbr7lEslKhZ3jpVBYzcTiHp/oA=">
      <file short-path="using-member-function.cpp" source-path="using-member-function.cpp" line="43"/>
      <param>
        <type id="VcdHojbpExgHkfZT+vfrZl1ADjM=" name="Tag&lt;3&gt;"/>
      </param>
      <doc>
        <brief>
          <text>Protected member function f taking a Tag&lt;3&gt;.</text>
        </brief>
      </doc>
    </function>
  </struct>
</namespace>
</mrdocs>
