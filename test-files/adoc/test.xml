<?xml version="1.0" encoding="UTF-8"?>
<mrdox xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://github.com/cppalliance/mrdox/raw/develop/mrdox.rnc">
<namespace>
  <struct name="U" id="FLgkhM3m0U3Lo2o3XLPUizWPH00=">
    <file path="test.cpp" line="2" class="def"/>
    <doc>
      <para>
        <text>Nothing much</text>
      </para>
    </doc>
  </struct>
  <struct name="T" id="CgGNdHpW5mG/i5741WPYQDw28OQ=">
    <file path="test.cpp" line="4" class="def"/>
    <function name="append" id="xjY/VUr5jz8MT4EaU0VNyCMBfgA=">
      <file path="test.cpp" line="38"/>
      <param name="id">
        <type name="int"/>
      </param>
      <param name="value">
        <type class="pointer">
          <pointee-type name="char" cv-qualifiers="const"/>
        </type>
      </param>
      <doc>
        <para>
          <text>Append a header</text>
        </para>
        <para>
          <text>This function appends a new header.</text>
          <text>        Existing headers with the same name are</text>
          <text>        not changed. Names are not case-sensitive.</text>
          <text>        No iterators are invalidated.</text>
        </para>
        <head>Example</head>
        <code>
          <text>        request req;</text>
          <text></text>
          <text>        req.append( field::user_agent, &quot;Boost&quot; );</text>
        </code>
        <head>Complexity</head>
        <para>
          <text>        Linear in `to_string( id ).size() + value.size()`.</text>
        </para>
        <head>Exception Safety</head>
        <para>
          <text>        Strong guarantee.</text>
          <text>        Calls to allocate may throw.</text>
        </para>
        <param name="id">
          <text>The field name constant,</text>
          <text>        which may not be</text>
          <text>U.</text>
        </param>
        <param name="value">
          <text>A value, which</text>
        </param>
        <listitem>
          <text>Must be syntactically valid for the header,</text>
        </listitem>
        <listitem>
          <text>Must be semantically valid for the message, and</text>
        </listitem>
        <listitem>
          <text>May not contain leading or trailing whitespace.</text>
        </listitem>
        <returns>
          <text>nothing.</text>
        </returns>
      </doc>
    </function>
  </struct>
</namespace>
</mrdox>
