{{!--
    Renders the qualified symbol in the format used in titles

    Titles use a format where all parent namespaces are linked to their documentation.
    A parent is included only if it has a name. Unnamed namespaces are not included.

    In general, the last symbol name is then appended to the linked namespaces without
    any link because it represents the current symbol. However, there are some
    exceptions to that:

    - If the symbol is a conversion operator, the conversion type is linked.
    - If the symbol is a template specialization, the primary template is linked
      and the links to the arguments are appended to the name.
    - In other cases, the symbol name text is used without any links.

    Expected Context: {Symbol Object}

    Example:
        {{> symbol/title-qualified-name symbol }}

    See: https://mrdocs.com/docs/mrdocs/develop/generators.html#dom_reference
--}}
{{~#if (and parent parent.parent)~}}
{{~> symbol/qualified-name-title parent is-qualified-name-parent=true ~}}{{#if parent.name }}::{{/if}}
{{~/if~}}
{{~#if (and (eq kind "function") (eq functionClass "conversion"))~}}
    {{~> symbol/name . ~}}
{{~else if is-qualified-name-parent ~}}
    {{!~ If this is a parent, we only print it if it really has a name ~}}
    {{~#if name ~}}
        {{~> symbol/name . ~}}
    {{~/if~}}
{{~else if (eq kind "guide")~}}
    {{>type/declarator deduced nolink=false~}}
{{~else if (contains (arr "explicit" "partial") template.kind)~}}
    {{!~ If the last part is a template specialization, we include links to primary template and the arguments. ~}}
    {{!~ If the primary template wasn't correctly extracted for some reason, we just print the name as usual. ~}}
    {{#if template.primary }}{{~>symbol/name template.primary ~}}{{else}}{{ name }}{{/if}}{{>template/args args=template.args nolink=false~}}
{{~else~}}
    {{~> symbol/name-text . ~}}
{{~/if~}}